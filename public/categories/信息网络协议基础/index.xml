<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>信息网络协议基础 on AGA&#39;s Blog</title>
        <link>https://anonymity-0.github.io/categories/%E4%BF%A1%E6%81%AF%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/</link>
        <description>Recent content in 信息网络协议基础 on AGA&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>AGA</copyright>
        <lastBuildDate>Mon, 20 Nov 2023 10:27:05 +0800</lastBuildDate><atom:link href="https://anonymity-0.github.io/categories/%E4%BF%A1%E6%81%AF%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>信网实验2</title>
        <link>https://anonymity-0.github.io/posts/%E4%BF%A1%E7%BD%91%E5%AE%9E%E9%AA%8C2/</link>
        <pubDate>Mon, 20 Nov 2023 10:27:05 +0800</pubDate>
        
        <guid>https://anonymity-0.github.io/posts/%E4%BF%A1%E7%BD%91%E5%AE%9E%E9%AA%8C2/</guid>
        <description>&lt;h2 id=&#34;基本操作&#34;&gt;基本操作&lt;/h2&gt;
&lt;h3 id=&#34;查看并记录-hosta-和-s-的-ipv6ens5-scopelink-地址&#34;&gt;查看并记录 HostA 和 S 的 IPv6(ens5 scope:link) 地址&lt;/h3&gt;
&lt;p&gt;命令 &lt;code&gt;ifconfig ens5&lt;/code&gt;。
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.ldpjzb9l5jk.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.1xxjljjl8azk.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令解释&#34;&gt;命令解释&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ifconfig&lt;/code&gt;是一个用于配置和显示Linux操作系统网络接口信息的命令。当执行&lt;code&gt;ifconfig ens5&lt;/code&gt;命令时，它会显示ens5网络接口的配置信息，包括IP地址、子网掩码、MAC地址、数据包统计等。&lt;/p&gt;
&lt;h3 id=&#34;ipv6-连接&#34;&gt;IPv6 连接：&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;HostA 的终端 1 中执行 `sudo tcpdump -vxn host HostA 的 IPv6(ens5 scope:link) 地址 and S 的 IPv6(ens5 scope:link）地址 -i ens5`。

HostA 的终端 2 中执行 `ping6 -c 1 S 的 IPv6(ens5 scope:link）地址%ens5`。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.6do1erorr8jk.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.29ezt78rs9vk.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.4ifskyjvutfk.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令解释-1&#34;&gt;命令解释&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sudo tcpdump -vxn host HostA 的 IPv6(ens5 scope:link) 地址 and S 的 IPv6(ens5 scope:link）地址 -i ens5&lt;/code&gt; 这个命令的作用是使用tcpdump工具来捕获指定主机HostA和另一台主机S之间通过ens5网络接口的IPv6通信数据包。其中-v选项表示以详细模式显示数据包信息，-x选项表示以十六进制和ASCII形式显示数据包内容，-n选项表示以数字形式显示地址而不进行地址解析，-i ens5表示指定监听的网络接口为ens5。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ping6 -c 1 S 的 IPv6(ens5 scope:link）地址%ens5&lt;/code&gt; 这个命令的作用是向指定的IPv6地址发送一个ICMPv6 Echo Request数据包，以测试与目标主机S的连通性。其中-c 1表示只发送一个数据包，S 的 IPv6(ens5 scope:link）地址表示目标主机S的IPv6地址，%ens5表示指定使用ens5网络接口发送数据包。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;结果&#34;&gt;结果&lt;/h4&gt;
&lt;p&gt;【实验要求】：此步骤需要记录终端 1 中抓到的 2 个报文数据，表明哪个是请求报文，哪个是回复报文。根据 IPv6 协议报文格式分析上述 tcpdump 抓包结果，要求画出 IPv6 以及 ICMPv6 的基本报头结构并将各个字段分别填入其中 (例如 IP 协议版本、源地址和目的地址、源端口和目的端口、报文含义等)。对这个报文的含义加以解释。&lt;/p&gt;
&lt;p&gt;第一个报文是请求报文，第二个报文是回复报文。&lt;/p&gt;
&lt;p&gt;第一个报文的IPv6报头如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Version: 6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Traffic Class: 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Flow Label: 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Payload Length: 64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Next Header: ICMPv6 (58)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hop Limit: 64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Source Address: fe80::f816:3eff:fea7:a942
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Destination Address: fe80::f816:3eff:fee7:f7b3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+-------------+----------------+------------+------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|  Version    | Traffic Class  | Flow Label | Payload Length   |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+-------------+----------------+------------+------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|      6      |        0       |      0     |        64        |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+-------------+----------------+------------+------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| Next Header |   Hop Limit    | Source Address                |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+-------------+----------------+-------------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|     58      |       64       | fe80::f816:3eff:fea7:a942     |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+---------------+----------------+-----------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|               Destination Address                            |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+--------------------------------------------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|               fe80::f816:3eff:fee7:f7b3                      |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+--------------------------------------------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;ICMPv6报头如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Type: ICMPv6 Echo Request (128)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Code: 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Checksum: 0x158e
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Identifier: 0x0001
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Sequence Number: 1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第二个报文的IPv6报头如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+-------------+----------------+------------+------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|  Version    | Traffic Class  | Flow Label | Payload Length   |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+-------------+----------------+------------+------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|      6      |        0       |      0     |        64        |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+-------------+----------------+------------+------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| Next Header |   Hop Limit    | Source Address                |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+-------------+----------------+-------------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|     58      |       64       | fe80::f816:3eff:fee7:f7b3     |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+---------------+----------------+-----------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|               Destination Address                            |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+--------------------------------------------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|               e80::f816:3eff:fea7:a942                       |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+--------------------------------------------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;ICMPv6报头如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Type: ICMPv6 Echo Reply (129) 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Code: 0 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Checksum: 0x0506 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Identifier: 0x0001 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Sequence Number: 1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;根据ICMPv6报文的类型和代码，可以判断第一个报文是ICMPv6 Echo Request报文，第二个报文是ICMPv6 Echo Reply报文。&lt;/p&gt;
&lt;p&gt;ICMPv6 Echo Request报文用于请求对端发送Echo Reply报文。第一个报文的源地址是fe80::f816:3eff:fea7:a942，目的地址是fe80::f816:3eff:fee7:f7b3。序列号为1，表示这是第一个请求报文。&lt;/p&gt;
&lt;p&gt;ICMPv6 Echo Reply报文用于响应ICMPv6 Echo Request报文。第二个报文的源地址是fe80::f816:3eff:fee7:f7b3，目的地址是fe80::f816:3eff:fea7:a942。序列号为1，表示这是对第一个请求报文的响应
上述tcpdump抓包结果表明，两个主机之间正在进行ICMPv6 Echo测试。&lt;/p&gt;
&lt;h3 id=&#34;路由器公告报文&#34;&gt;路由器公告报文&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;路由器公告报文的目的地址为 IPv6 组播地址中的“全节点地址”，它的地址是FF02::1，可用 tcpdump 侦听路由器公告报文。HostA 中另开一个终端 3 用于侦听路由器公告报文，命令为：
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;sudo tcpdump –vxn host ff02::1 -i ens5&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;【实验要求】记录 HostA 的终端 3 中 tcpdump 抓包得到的数据。由于路由器公告报文的发送有一定地周期，因此这里可能需要等待较长时间，可以把终端 3 最小化继续进行其他实验，等有结果后记录抓包得到的数据。如仍未顺利抓到此包，也可以参考附录中的图 4 回答下述问题。根据 tcpdump 抓取到的报文数据说明路由器通告报文通告了哪些信息并简单解释网络中的其它主机将会如何使用这些信息？&lt;/p&gt;
&lt;h4 id=&#34;命令解释-2&#34;&gt;命令解释&lt;/h4&gt;
&lt;p&gt;这个命令的作用是使用tcpdump工具来捕获发送到IPv6组播地址ff02::1的数据包，该地址是IPv6中的所有节点组播地址。其中-v选项表示以详细模式显示数据包信息，-x选项表示以十六进制和ASCII形式显示数据包内容，-n选项表示以数字形式显示地址而不进行地址解析，-i ens5表示指定监听的网络接口为ens5。&lt;/p&gt;
&lt;h4 id=&#34;结果-1&#34;&gt;结果&lt;/h4&gt;
&lt;p&gt;根据 tcpdump 抓取到的报文数据，路由器通告报文通告了以下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源地址：fe80::f816:3eff:fee6:e881&lt;/li&gt;
&lt;li&gt;目标地址：ff02::1&lt;/li&gt;
&lt;li&gt;路由前缀：2001:db8:85a3::/64&lt;/li&gt;
&lt;li&gt;生命周期&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络中的其它主机将会使用这些信息来进行以下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;获取路由信息&lt;/strong&gt;：主机可以使用路由前缀信息来构建自己的路由表，从而能够将数据包发送到目的网络。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动配置地址&lt;/strong&gt;：如果路由器通告了 M 比特为 1，则主机将使用 DHCPv6 服务来获取 IPv6 地址。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;启用 IPv6 邻居发现&lt;/strong&gt;：主机可以使用路由器通告中的链路层选项来启用 IPv6 邻居发现。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;地址解析&#34;&gt;地址解析&lt;/h3&gt;
&lt;p&gt;地址解析的目的是通过对端的 IP 获取对端的 MAC 地址。由于地址解析过程会在数据发送前自动进行，因此需要先用 tcpdump 侦听，再 ping 对端，即可观察到NS 和 NA 报文。&lt;/p&gt;
&lt;p&gt;HostA 的终端 1 执行命令 &lt;code&gt;sudo tcpdump -vxn host HostA 的 IPv6(ens5 scope:link) 地址 -i ens5&lt;/code&gt;
HostA 的终端 2 执行命令 &lt;code&gt;ping6 -c 1 HostB 的 IPv6(ens5 scope:link）地址%ens5。&lt;/code&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.o525tblz7nk.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令解释-3&#34;&gt;命令解释&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;sudo tcpdump -vxn host HostA 的 IPv6(ens5 scope:link) 地址 -i ens5&lt;/code&gt; 这个命令的作用是使用tcpdump工具来捕获发送到特定IPv6地址（HostA的IPv6地址，ens5接口，scope为link）的数据包，其中-v选项表示以详细模式显示数据包信息，-x选项表示以十六进制和ASCII形式显示数据包内容，-n选项表示以数字形式显示地址而不进行地址解析，-i ens5表示指定监听的网络接口为ens5。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ping6 -c 1 HostB 的 IPv6(ens5 scope:link）地址%ens5。&lt;/code&gt; 这个命令的作用是向指定的IPv6地址（HostB的IPv6地址，ens5接口，scope为link）发送一个ICMPv6数据包，-c 1表示只发送一个数据包。在IPv6地址后面加上%ens5是为了指定数据包通过ens5接口发送。&lt;/p&gt;
&lt;h4 id=&#34;结果-2&#34;&gt;结果&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.6i9gih550whs.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.17fbvc5btxwg.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.40kj12visim8.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;【实验要求】：记录 HostA 的终端 1 中观察到邻居请求 (NS) 和邻居通告 (NA) 报文。根据抓取到的报文数据说明邻居请求及邻居公告报文通告了哪些信息，这些信息有什么作用？&lt;/p&gt;
&lt;p&gt;从抓取到的报文数据来看，邻居请求 (NS) 报文通告了以下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源地址：fe80::f816:3eff:fea7:a942&lt;/li&gt;
&lt;li&gt;目标地址：fe80::f816:3eff:fee7:1aea&lt;/li&gt;
&lt;li&gt;请求类型：Who has&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些信息用于查询目标地址的邻居节点。&lt;/p&gt;
&lt;p&gt;邻居通告 (NA) 报文通告了以下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源地址：fe80::f816:3eff:fee7:1aea&lt;/li&gt;
&lt;li&gt;目标地址：fe80::f816:3eff:fea7:a942&lt;/li&gt;
&lt;li&gt;链路层地址：fa:16:3e:5b:1a:ea&lt;/li&gt;
&lt;li&gt;可达性：可达
这些信息用于告知源地址，目标地址是可达的，并且目标地址的链路层地址是 fa:16:3e:e7:f7:b3。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tcp-三次握手&#34;&gt;TCP 三次握手&lt;/h3&gt;
&lt;p&gt;netcat 可以在主机间建立 TCP 连接，建立连接时，可以用 tcpdump 对 报文抓包，观察到 TCP 的三次握手过程。&lt;/p&gt;
&lt;p&gt;首先在 S 的终端 1 中执行 &lt;code&gt;nc -l 1958&lt;/code&gt; 侦听 1958 端口。&lt;/p&gt;
&lt;p&gt;之后在 HostA 的终端1 执行 &lt;code&gt;sudo tcpdump -vxn host HostA 的 IPv4(ens5) 地址 andS 的 IPv4(ens5) 地址 -i ens5&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在HostA 的终端2 执行 &lt;code&gt;nc S 的IPv4(ens5)地址 1958&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.4jeneo3oaozk.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令解释-4&#34;&gt;命令解释&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nc -l 1958&lt;/code&gt;：这个命令使用nc（netcat）工具在本地监听1958端口，等待接收数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo tcpdump -vxn host HostA 的 IPv4(ens5) 地址 andS 的 IPv4(ens5) 地址 -i ens5&lt;/code&gt;：这个命令是用来使用tcpdump工具来捕获网络数据包的命令。其中&amp;quot;-v&amp;quot;表示详细模式，&amp;quot;-x&amp;quot;表示以十六进制和ASCII格式显示数据包，&amp;quot;-n&amp;quot;表示以数字形式显示地址，&amp;quot;-i ens5&amp;quot;表示监听网络接口ens5上的数据包。&amp;ldquo;host HostA 的 IPv4(ens5) 地址 andS 的 IPv4(ens5) 地址&amp;quot;这部分应该是要指定要捕获的数据包的源和目标主机的IP地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nc S 的IPv4(ens5)地址 1958&lt;/code&gt;：这个命令使用nc（netcat）工具来连接到指定的IPv4地址的主机的1958端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;结果-3&#34;&gt;结果&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.39cwrnvx7sn4.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;【实验要求】：完整记录 HostA 的终端 1 中观察到的前三个报文，即 TCP 握手报文。标注出每个报文的类型（SYN、SYN/ACK、ACK）。简要说明 TCP 协议采用三次握手的原因。说明实验中为何无法抓到 RST 包？请问编写应用程序时我们是否需要处理这些报文，为什么？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TCP 协议采用三次握手的原因&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确保连接的建立是可靠的。&lt;/li&gt;
&lt;li&gt;避免已建立的连接被重复建立。&lt;/li&gt;
&lt;li&gt;避免连接被恶意攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在三次握手的过程中，双方主机各发送一个 SYN 报文，然后再各发送一个 ACK 报文。这样，双方主机就可以确认对方是可靠的，并且连接是可靠的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实验中无法抓到 RST 包的原因&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在实验中，HostA 和 HostB 建立了 TCP 连接，并开始传输数据。如果 HostA 或 HostB 想要终止连接，则会发送 RST 包。但是，由于实验中我们没有终止连接，因此无法抓到 RST 包。&lt;/p&gt;
&lt;p&gt;如果 HostA 发送了一个无效的 TCP 报文，或者 HostB 拒绝建立连接，则 HostB 可能会发送 RST 包来终止连接。在这种情况下，可以通过 tcpdump 来抓到 RST 包。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编写应用程序时是否需要处理这些报文&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编写应用程序时，通常不需要直接处理 TCP 握手报文。应用程序可以通过调用系统 API 来建立和管理 TCP 连接。&lt;/p&gt;
&lt;h2 id=&#34;隧道&#34;&gt;隧道&lt;/h2&gt;
&lt;p&gt;注意 隧道删除命令为 &lt;code&gt;ip tunnel de&lt;/code&gt;l 隧道名称，若添加隧道命令打错可用此命令删除后重建。&lt;/p&gt;
&lt;h3 id=&#34;打开两个-host-虚拟机并各打开一个终端&#34;&gt;打开两个 Host 虚拟机并各打开一个终端&lt;/h3&gt;
&lt;h3 id=&#34;在-hosta-的终端上执行命令&#34;&gt;在 HostA 的终端上执行命令：&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo ip tunnel add sit1 mode sit remote HostB 的 IPv4 地址 local HostA 的 IPv4 地址 dev ens5&lt;/code&gt;（IPv4 地址可以由命令 ifconfig ens5 获得）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ip link set sit1 up&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ip link show up&lt;/code&gt;【记录结果，此时可以看到名字为 sit1 的设备】
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.2le9m5gq3h4w.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ip addr add 3ffe:3216:2101:2106:1234::A/80 dev sit1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ip tunnel show&lt;/code&gt;【记录结果】
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.iqowyiib1nk.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令解释-5&#34;&gt;命令解释&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sudo ip tunnel add sit1 mode sit remote HostB 的 IPv4 地址 local HostA 的 IPv4 地址 dev ens5&lt;/code&gt;：该命令用于创建一个名为 sit1 的隧道接口，该隧道接口的模式为 SIT，远程端地址为 HostB 的 IPv4 地址，本地端地址为 HostA 的 IPv4 地址，隧道接口绑定的物理接口为 ens5。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sudo ip link set sit1 up&lt;/code&gt;：HostA 已经创建了名为 sit1 的隧道接口，但该隧道接口处于禁用状态。通过执行该命令，将 sit1 隧道接口置为启用状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ip link show&lt;/code&gt; 命令用于显示系统的网络接口信息，包括其当前状态。&lt;code&gt;up&lt;/code&gt; 选项只显示当前已启用的网络接口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sudo ip addr add 3ffe:3216:2101:2106:1234::A/80 dev sit1&lt;/code&gt; ：该命令用于将 IPv6 地址 &lt;code&gt;3ffe:3216:2101:2106:1234::A&lt;/code&gt; 分配给隧道接口 &lt;code&gt;sit1&lt;/code&gt;，前缀长度为 80&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ip tunnel show&lt;/code&gt; 用于显示系统中所有隧道接口的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;在-hostb-的终端上执行命令&#34;&gt;在 HostB 的终端上执行命令：&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo ip tunnel add sit1 mode sit remote HostA 的 IPv4 地址 local HostB 的 IPv4 地址 dev ens5&lt;/code&gt;（IPv4 地址可以由命令 ifconfig ens5 获得）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ip link set sit1 up&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ip link show up&lt;/code&gt;【记录结果，此时可以看到名字为 sit1 的设备】
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.4ga09knkqhz4.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;code&gt;sudo ip addr add 3ffe:3216:2101:2106:1234::B/80 dev sit1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ip tunnel show&lt;/code&gt;【记录结果】
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.6nac4un2ee4g.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令解释-6&#34;&gt;命令解释&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sudo ip tunnel add sit1 mode sit remote HostA 的 IPv4 地址 local HostB 的 IPv4 地址 dev ens5&lt;/code&gt; 用于创建一个名为 &lt;code&gt;sit1&lt;/code&gt; 的隧道接口。该隧道接口使用 SIT 模式，远程端地址为 HostA 的 IPv4 地址，本地端地址为 HostB 的 IPv4 地址。隧道接口绑定到物理接口 &lt;code&gt;ens5&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sudo ip link set sit1 up&lt;/code&gt;  ：通过执行该命令，将 sit1 隧道接口置为启用状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ip link show&lt;/code&gt; 命令用于显示系统的网络接口信息，包括其当前状态。&lt;code&gt;up&lt;/code&gt; 选项只显示当前已启用的网络接口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sudo ip addr add 3ffe:3216:2101:2106:1234::B/80 dev sit1&lt;/code&gt; 用于将 IPv6 地址 &lt;code&gt;3ffe:3216:2101:2106:1234::B&lt;/code&gt; 分配给隧道接口 &lt;code&gt;sit1&lt;/code&gt;，前缀长度为 80。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ip tunnel show&lt;/code&gt; 用于显示系统中所有隧道接口的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;在-hosta-上打开两个终端&#34;&gt;在 HostA 上打开两个终端。&lt;/h3&gt;
&lt;p&gt;其中一个终端用 tcpdump 侦听报文，另一个终端用于 ping6。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先在 HostA 的第 1 个终端中执行命令 &lt;code&gt;sudo tcpdump -vxn -i sit1&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其次在 HostA 的第 2 个终端中执行命令 &lt;code&gt;ping6 –c 1 3ffe:3216:2101:2106 :1234::B&lt;/code&gt;，检查是否可以 ping 通，若不通则需要检查之前的步骤是否正确完成。
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.72mpxaurejuo.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;记录 HostA 的第 1 个终端中由 tcpdump 抓取的前两个报文。
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.5c0s3olohwqo.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关闭 HostA 的这两个终端并重新打开两个新的终端。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 HostA 的第 1 个终端中执行命令 &lt;code&gt;sudo tcpdump -vxn –i ens5&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 HostA 的第 2 个终端中执行命令 &lt;code&gt;ping6 –c 1 3ffe:3216:2101:2106:1234::B&lt;/code&gt;。
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.6v3ufzbmok8w.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;记录 HostA 的第 1 个终端中由 tcpdump 抓取的前两个报文（可能要等一会儿）。
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.1glvfx8x0eps.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;命令解释-7&#34;&gt;命令解释&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sudo tcpdump -vxn -i sit1&lt;/code&gt; 用于捕获在隧道接口 &lt;code&gt;sit1&lt;/code&gt; 上传输的网络数据包。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ping6 –c 1 3ffe:3216:2101:2106:1234::B&lt;/code&gt;该命令将向 IPv6 地址 &lt;code&gt;3ffe:3216:2101:2106:1234::B&lt;/code&gt; 发送一个 ICMP 回显请求数据包。如果该地址可达，则目标主机将会响应一个 ICMP 回显应答数据包。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;结果解释&#34;&gt;结果解释&lt;/h4&gt;
&lt;p&gt;【实验要求】：记录需要记录的实验数据。从报文结构上看，通过隧道通信与两个 IPv6 主机直接通信的区别是什么，即上述隧道通信的报文有什么特点？&lt;/p&gt;
&lt;p&gt;通过隧道通信与两个 IPv6 主机直接通信的区别是什么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;隧道通信的报文中，IPv6 头部包含了源地址和目标地址，以及隧道协议类型。两个 IPv6 主机直接通信的报文中，IPv6 头部只包含了源地址和目标地址。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;隧道通信的报文中，包含了隧道协议头部，用于描述隧道连接的相关信息。两个 IPv6 主机直接通信的报文中，没有隧道协议头部。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>信网实验1</title>
        <link>https://anonymity-0.github.io/posts/%E4%BF%A1%E7%BD%91%E5%AE%9E%E9%AA%8C1/</link>
        <pubDate>Tue, 07 Nov 2023 12:46:21 +0800</pubDate>
        
        <guid>https://anonymity-0.github.io/posts/%E4%BF%A1%E7%BD%91%E5%AE%9E%E9%AA%8C1/</guid>
        <description>&lt;h1 id=&#34;实验内容&#34;&gt;实验内容&lt;/h1&gt;
&lt;h2 id=&#34;arp&#34;&gt;arp&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在 HostA 和 HostB 中分别打开一个终端用于本实验。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在 HostA 和 HostB 中分别执行命令&lt;code&gt;ifconfig ens5&lt;/code&gt;，查看并记录它们各自的IPv4 地址。执行命令 &lt;code&gt;ifconfig ens6&lt;/code&gt; 查看 IPv6 地址 (global 和 link 两种) 以及以太网接口的物理地址。&lt;/strong&gt;
&lt;strong&gt;截图：&lt;/strong&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.2dh0lur8qhkw.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.5s8kni5d7b7k.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.2i1qwanl02dc.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.37tkn71qiu4g.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令解释：&lt;/strong&gt;
&lt;code&gt;ifconfig&lt;/code&gt; 是一个用于配置和显示网络接口信息的命令。&lt;code&gt;ens5&lt;/code&gt; 和 &lt;code&gt;ens6&lt;/code&gt; 是网络接口的名称，通常用于表示以太网接口。&lt;code&gt;ifconfig ens5&lt;/code&gt; 命令用于显示名为 &lt;code&gt;ens5&lt;/code&gt; 的网络接口的配置信息，包括 IP 地址、子网掩码、广播地址、MAC 地址等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在 HostA 中执行命令 &lt;code&gt;arp -n&lt;/code&gt; 或&lt;code&gt;ip neigh show&lt;/code&gt; 查看并记录本机 ARP 缓存表的内容。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令解释：&lt;/strong&gt;
&lt;code&gt;arp -n&lt;/code&gt; 是一个用于查看本地ARP缓存表的命令。它会显示已解析的IP地址和对应的MAC地址。
&lt;code&gt;ip neigh show&lt;/code&gt; 是一个用于查看本地邻居表的命令。它会显示已解析的IP地址和对应的MAC地址，类似于 arp -n 命令。
arp -n 和 ip neigh show 都是用于查看本地ARP缓存表或邻居表的命令，它们的功能相似但有一些区别。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;命令格式不同：arp -n 是在大多数操作系统中使用的命令，而 ip neigh show 是在基于 Linux 的操作系统中使用的命令。&lt;/li&gt;
&lt;li&gt;输出格式不同：arp -n 输出的结果通常是以表格形式显示的，包括IP地址和对应的MAC地址。而 ip neigh show 输出的结果可能更详细，包括IP地址、MAC地址、接口、状态等信息。&lt;/li&gt;
&lt;li&gt;支持的功能不同：ip neigh show 命令在功能上更加强大，可以显示更多关于邻居的信息，如状态、接口类型等。而 arp -n 命令通常只显示基本的IP地址和MAC地址信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;截图：&lt;/strong&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.4y3egv3n6av4.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.2al8hllnncow.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在 HostA 中执行命令 &lt;code&gt;ping -c 1 HostB 的 IPv4 地址&lt;/code&gt;向 HostB 发送 ICMP 请求报文。收到 ICMP 响应后再次执行命令 &lt;code&gt;arp -n&lt;/code&gt; 或&lt;code&gt;ip neigh show&lt;/code&gt; 查看 HostA的 ARP 缓存表的内容。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令解释&lt;/strong&gt;
&lt;code&gt;ping -c 1 HostB&lt;/code&gt; 是一个用于向 HostB 发送一个 ICMP 回显请求（ping）的命令。其中，&lt;code&gt;-c 1&lt;/code&gt; 表示只发送一次请求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;截图&lt;/strong&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.1ocbv5gka4v4.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.nkkv22ucnpc.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在 HostA 的 ARP 缓存表里面可获得 HostB 的 MAC 地址，记录下来，检查与 HostB 上&lt;code&gt;ifconfig ens5&lt;/code&gt; 命令的执行结果是否一致。&lt;/strong&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.2yddow5xfbi8.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.4vlp8qvkr4e8.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
与 HostB 上&lt;code&gt;ifconfig ens5&lt;/code&gt; 命令的执行结果一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在 HostA 中执行命令&lt;code&gt;ping -c 1 202.38.64.246&lt;/code&gt;，收到 ICMP 响应后继续执行命令&lt;code&gt;ip neigh show&lt;/code&gt; 查看 HostA 的 ARP 缓存表，记录结果。简要解释为何无法看到对应于地址 &lt;code&gt;202.38.64.246&lt;/code&gt; 的 ARP 表项而只能得到网关的某网卡的MAC 地址。提示：思考网段(链路)、广播域的概念。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;截图：&lt;/strong&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.cmtl9p1qatc.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;strong&gt;解释：&lt;/strong&gt;
这是因为，ARP 协议用于在同一网段内查找主机的 MAC 地址。当 HostA 发送 ICMP 请求到目标地址 202.38.64.246 时，目标地址不在 HostA 的网段内，因此 HostA 需要向网关发送广播 ARP 请求。网关收到广播 ARP 请求后，会将自己的 MAC 地址回复给 HostA。HostA 收到网关的回复后，将网关的 MAC 地址存储在 ARP 缓存表中。因此，HostA 无法看到对应于地址 202.38.64.246 的 ARP 表项。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;ip&#34;&gt;IP&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分别用命令 route -n 和命令route &amp;ndash;inet6 查看本机的 IPv4 和 IPv6 路由配置，记录所在子网的子网掩码/前缀长度，并于前面 ifconfig 的结果作比较。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令解释&lt;/strong&gt;
&lt;code&gt;route -n&lt;/code&gt; 是一个用于显示 IPv4 路由表的命令。它会列出系统中当前配置的所有 IPv4 路由项，包括目的网络、网关、子网掩码、接口和路由标志等信息。该命令中的 &lt;code&gt;-n&lt;/code&gt; 选项表示以数字形式显示 IP 地址和子网掩码，而不进行主机名和网络地址的解析。
&lt;code&gt;route --inet6&lt;/code&gt; 是一个用于显示 IPv6 路由表的命令。它会列出系统中当前配置的所有 IPv6 路由项，包括目的网络、网关、前缀长度、接口和路由标志等信息。该命令中的 &lt;code&gt;--inet6&lt;/code&gt; 选项表示只显示 IPv6 路由表的信息。
&lt;strong&gt;截图：&lt;/strong&gt;
![[Pasted image 20231106202048.png]]
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.2dh0lur8qhkw.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;	&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.2i1qwanl02dc.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
比较两者的结果，可以看到，IPv4 和 IPv6 路由表中的子网掩码/前缀长度均与&lt;code&gt;ifconfig&lt;/code&gt;的结果一致。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;执行以下两个命令分别查看系统内核的 IPv4 和 IPv6 的 FORWARD 值，记录下来。简单解释这个值的含义以及为何这个值是这样设定的。提示：思考主机与路由器的区别。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;命令 1：&lt;code&gt;cat /proc/sys/net/ipv4/ip_forward&lt;/code&gt;
命令 2：&lt;code&gt;cat /proc/sys/net/ipv6/conf/all/forwarding&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令解释：&lt;/strong&gt;
命令1：&lt;code&gt;cat /proc/sys/net/ipv4/ip_forward&lt;/code&gt; 用于查看 IPv4 转发功能的状态。在 Linux 系统中，如果该值为 1，则表示启用了 IPv4 转发功能，即允许将数据包从一个网络接口转发到另一个网络接口。
命令2：&lt;code&gt;cat /proc/sys/net/ipv6/conf/all/forwarding&lt;/code&gt; 用于查看 IPv6 转发功能的状态。类似于 IPv4，如果该值为 1，则表示启用了 IPv6 转发功能，允许将数据包从一个 IPv6 网络接口转发到另一个 IPv6 网络接口。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;截图：&lt;/strong&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.4xdi7ls4epvk.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;strong&gt;解释：&lt;/strong&gt;
可以看到，系统内核的 IPv4 和 IPv6 的 FORWARD 值均为 0。FORWARD 值的含义是是否允许系统转发 IP 数据包。如果 FORWARD 值为 0，则系统不允许转发 IP 数据包。主机和路由器的区别在于，主机只能与同一子网内的主机通信，而路由器可以连接多个子网，并负责将数据包从一个子网转发到另一个子网。由于主机只能与同一子网内的主机通信，因此不需要转发 IP 数据包。因此，主机的 FORWARD 值通常为 0。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;tcp&#34;&gt;TCP&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在 S 的终端 1 中执行 nc -l 1958 侦听1958 端口。。&lt;/strong&gt;
&lt;strong&gt;命令解释：&lt;/strong&gt;
命令 &lt;code&gt;nc -l 1958&lt;/code&gt; 将在 TCP 端口 1958 上监听传入连接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nc&lt;/code&gt;：netcat 命令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;：监听传入连接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1958&lt;/code&gt;：端口号
&lt;strong&gt;截图：&lt;/strong&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.3q5oc9vpy3r4.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在HostA 的终端 1 执行nc S 的IPv4 地址 1958&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;截图：&lt;/strong&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.edjkfbzgz8w.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.483sotr5iwsg.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在HostA 终端 2 中执行命令netstat -aunt 来观察自己主机上的所有 TCP 与UDP 连接状况，将输出的信息记录下来。请在上述记录的结果中找到对应于上述连接的那条记录并解释这条记录的含义。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令解释&lt;/strong&gt;：
执行 &lt;code&gt;netstat -aunt&lt;/code&gt; 命令可以查看当前系统上所有的网络连接和监听端口，以及它们的状态、协议类型、本地地址和远程地址等信息
&lt;strong&gt;截图：&lt;/strong&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.5gebmmqakyv4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;这条记录表示，HostA 主机的60260端口与 S 主机的 1958 端口建立了 TCP 连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;执行命令 nc S 的 IPv4 地址 100，记录命令执行结果。同样使用 netstat -aunt 来查看本机的连接状况，请判断这次 telnet 连接是否成功建立并简单说明原因。&lt;/strong&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.2v2ms0onuqv4.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
&lt;img src=&#34;https://cdn.statically.io/gh/Anonymity-0/Picgo@note_picture/img/image.53ebne5z02dc.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;
原因是 100 端口是 telnet 服务器的默认端口，但 S 主机没有在 100 端口上监听 telnet 连接。因此，HostA 主机无法与 S 主机建立 telnet 连接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;思考题&#34;&gt;思考题&lt;/h1&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;现在有一个网段的 IP 地址和子网掩码分别为202.38.75.0/255.255.255.192，请计算该网段中一共有多少个全局 IPv4 地址可供主机使用，或者说这个网络中有多少真正可分配的 IP 地址？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;子网掩码 &lt;code&gt;255.255.255.192&lt;/code&gt; 的二进制表示为 &lt;code&gt;11111111 11111111 11111111 11000000&lt;/code&gt;，其中前 24 位为 1，表示该网段的网络地址部分，后 8 位为 0，表示该网段的广播地址部分。因此，该网段中一共有 &lt;code&gt;2^6 - 2 = 62&lt;/code&gt; 个全局 IPv4 地址可供主机使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实验中执行 ifconfig ens3 查看接口的配置信息时可以观察到一个重要的参数MTU，请问这个值是多少？查询资料说明 MTU 参数的用途。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MTU 是最大传输单元（Maximum Transmission Unit）的缩写，指的是网络层协议所能通过的最大数据包大小。MTU 的值通常与通信接口有关（网络接口卡、串口等）。
MTU 的值通常以字节为单位，常见的默认值是 1500 字节。这是因为以太网是最常见的网络类型，而以太网的标准帧大小为 1518 字节（包括帧头和帧尾），减去以太网帧头的 18 字节，剩下的 1500 字节就是可用于数据传输的最大数据量。
当数据包的大小超过 MTU 值时，网络层协议会将数据包分片，将数据包拆分成多个小数据包，然后分别传输。分片会增加网络层协议的复杂度，并降低网络效率。因此，在实际应用中，需要根据网络环境调整 MTU 参数的值，以保证数据包能够正常传输，并提高网络效率。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; 9. &lt;strong&gt;IPv6 地址长度是 IPv4 地址长度的 4 倍，不过在今后的纯 IPv6 网络环境中路由器的 路由表的规模反而有望减小，请简单解释这是为什么？&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;在纯 IPv6 网络环境中，路由器的路由表规模有望减小的原因：
1. IPv6 支持路由重叠，即多个路由器可以指向同一个目标地址。这意味着 IPv6 路由器可以共享路由信息，从而减少路由条目的数量。
2. IPv6 路由表结构更加简化。IPv6 路由表采用了扁平化的结构，每个路由表项只需要存储一个目标地址和下一跳地址即可。而 IPv4 路由表采用了分层的结构，每个路由表项还需要存储一个前缀长度和子网掩码。
3. IPv6没有私有地址和NAT技术,减少了路由表中的条目。
4. IPv6 支持动态路由，即路由器可以自动学习到目标地址的路由信息。这意味着 IPv6 路由器不需要手动配置路由条目，从而减少路由条目的数量。
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;一条 TCP 连接需要哪几个参数标识？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一条 TCP 连接需要四个参数来标识，即：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;本地 IP 地址&lt;/strong&gt;：表示连接的本地主机的 IP 地址。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本地端口号&lt;/strong&gt;：表示连接的本地主机的端口号。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;远程 IP 地址&lt;/strong&gt;：表示连接的远程主机的 IP 地址。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;远程端口号&lt;/strong&gt;：表示连接的远程主机的端口号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
